#In this project i am going to make a unit calculator

#First, i am going to make a function for the weight converter

def weight_converter(weight, unit_from, unit_to):
    if unit_from == "kg" and unit_to == "g":
        return weight * 1000, unit_to
    elif unit_from == "g" and unit_to == "kg":
        return weight / 1000, unit_to
    elif unit_from == "kg" and unit_to == "mg":
        return weight * 1000000, unit_to
    elif unit_from == "mg" and unit_to == "kg":
        return weight / 1000000, unit_to
    elif unit_from == "g" and unit_to == "mg":
        return weight * 1000, unit_to
    elif unit_from == "mg" and unit_to == "g":
        return weight / 1000, unit_to
    else:
        return "Invalid unit", ""

#Now i am going to make a function for the length converter

def length_converter(length, unit_from, unit_to):
    if unit_from == "m" and unit_to == "cm":
        return length * 100, unit_to
    elif unit_from == "cm" and unit_to == "m":
        return length / 100, unit_to
    elif unit_from == "m" and unit_to == "mm":
        return length * 1000, unit_to
    elif unit_from == "mm" and unit_to == "m":
        return length / 1000, unit_to
    elif unit_from == "cm" and unit_to == "mm":
        return length * 10, unit_to
    elif unit_from == "mm" and unit_to == "cm":
        return length / 10, unit_to
    elif unit_from == "m" and unit_to == "km":
        return length / 1000, unit_to
    elif unit_from == "km" and unit_to == "m":
        return length * 1000, unit_to
    else:
        return "Invalid unit", ""

#Now i am going to make a function for the temperature converter

def temperature_converter(temperature, unit_from, unit_to):
    if unit_from == "c" and unit_to == "f":
        return (temperature * 9/5) + 32, unit_to
    elif unit_from == "f" and unit_to == "c":
        return (temperature - 32) * 5/9, unit_to
    elif unit_from == "c" and unit_to == "k":
        return temperature + 273.15, unit_to
    elif unit_from == "k" and unit_to == "c":
        return temperature - 273.15, unit_to
    elif unit_from == "f" and unit_to == "k":
        return (temperature + 459.67) * 5/9, unit_to
    elif unit_from == "k" and unit_to == "f":
        return temperature * 9/5 - 459.67, unit_to
    else:
        return "Invalid unit", ""

#Now i am going to make a function for the volume converter

def volume_converter(volume, unit_from, unit_to):
    if unit_from == "l" and unit_to == "ml":
        return volume * 1000, unit_to
    elif unit_from == "ml" and unit_to == "l":
        return volume / 1000, unit_to
    elif unit_from == "l" and unit_to == "cl":
        return volume * 100, unit_to
    elif unit_from == "cl" and unit_to == "l":
        return volume / 100, unit_to
    elif unit_from == "l" and unit_to == "dl":
        return volume * 10, unit_to
    elif unit_from == "dl" and unit_to == "l":
        return volume / 10, unit_to
    elif unit_from == "l" and unit_to == "hl":
        return volume / 100, unit_to
    elif unit_from == "hl" and unit_to == "l":
        return volume * 100, unit_to
    else:
        return "Invalid unit", ""

#Now i am going to make a function for the main menu. This function will be used to display the menu and get the user's choice.

def main():
    print("--------------------------------")
    print("Welcome to the unit calculator")
    print("1. Weight converter")
    print("2. Length converter")
    print("3. Temperature converter")
    print("4. Volume converter")
    print("5. Quit")
    print("--------------------------------")
    choice = int(input("Enter your choice: "))
    if choice == 1:
        print("kelogram(kg) to gram(g)")
        print("gram(g) to kelogram(kg)")
        print("kelogram(kg) to milligram(mg)")
        print("milligram(mg) to kelogram(kg)")
        print("gram(g) to milligram(mg)")
        print("milligram(mg) to gram(g)")
        print("--------------------------------")
        weight = float(input("Enter the weight: "))
        unit_from = input("Enter the unit from: ")
        unit_to = input("Enter the unit to: ")
        result, symbol = weight_converter(weight, unit_from, unit_to)
        print(f"{result} {symbol}")
    elif choice == 2:
        print("meter(m) to centimeter(cm)")
        print("centimeter(cm) to meter(m)")
        print("meter(m) to millimeter(mm)")
        print("millimeter(mm) to meter(m)")
        print("centimeter(cm) to millimeter(mm)")
        print("millimeter(mm) to centimeter(cm)")
        print("--------------------------------")
        length = float(input("Enter the length: "))
        unit_from = input("Enter the unit from: ")
        unit_to = input("Enter the unit to: ")
        result, symbol = length_converter(length, unit_from, unit_to)
        print(f"{result} {symbol}")
    elif choice == 3:
        print("celsius(c) to fahrenheit(f)")
        print("fahrenheit(f) to celsius(c)")
        print("celsius(c) to kelvin(k)")
        print("kelvin(k) to celsius(c)")
        print("fahrenheit(f) to kelvin(k)")
        print("kelvin(f) to fahrenheit(f)")
        temperature = float(input("Enter the temperature: "))
        unit_from = input("Enter the unit from: ")
        unit_to = input("Enter the unit to: ")
        result, symbol = temperature_converter(temperature, unit_from, unit_to)
        print(f"{result} {symbol}")
    elif choice == 4:
        print("liter(l) to milliliter(ml)")
        print("milliliter(ml) to liter(l)")
        print("liter(l) to centiliter(cl)")
        print("centiliter(cl) to liter(l)")
        print("liter(l) to deciliter(dl)")
        print("deciliter(dl) to liter(l)")
        volume = float(input("Enter the volume: "))
        unit_from = input("Enter the unit from: ")
        unit_to = input("Enter the unit to: ")
        result, symbol = volume_converter(volume, unit_from, unit_to)
        print(f"{result} {symbol}")
    elif choice == 5:
        print("Thank you for using the unit calculator")
        return False
    else:
        print("Invalid choice")
        return True

# Run the calculator loop
while True:
    should_continue = main()
    if should_continue == False:
        break
